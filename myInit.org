#+TITLE: Emacs Config
#+author: s-sap
#+startup: overview

* Theme & Font
Adds a Custom theme to emacs
#+begin_src emacs-lisp
  ; Theme
  (add-to-list 'custom-theme-load-path "~/.emacs.d/firebelly")
  (load-theme 'firebelly t)
   ; Change the font
 ; -ADBO-Source Code Pro-semibold-normal-normal-*-*-*-*-*-m-0-iso10646-1
  (add-to-list 'default-frame-alist '(font . "Source Code Pro Semibold 13"))
#+end_src

* Some Customization
#+begin_src emacs-lisp
    ;; Removing some default stuff
    (menu-bar-mode -1)
    (tool-bar-mode -1)
    (scroll-bar-mode -1)

    ; Enable auto-pair
    (electric-pair-mode 1)

    (setq org-src-fontify-natively t)

  ;; Show file size
    (size-indication-mode)
    ;; Transparency Window
    (add-to-list 'default-frame-alist '(alpha . (90 . 77)))

    ;; ;; Eww
    ;; (setq browse-url-browser-function 'eww-browse-url)
#+end_src
** Backup
  Keep emacs temp backup files in it's own directory

   #+begin_src emacs-lisp
   (setq backup-directory-alist `(("." . "~/.emacs.d/.emacs_saves")))
   #+end_src

* Personal Key Binding
#+begin_src emacs-lisp
  (global-set-key (kbd "C-t") 'tab-new)
  (global-set-key (kbd "C-x C-q") 'tab-close)
  (global-set-key (kbd "C-x C-a") 'toggle-frame-fullscreen)
  (global-set-key (kbd "C-c c") 'tab-switcher)
  (global-set-key (kbd "C-c t") 'multi-term-dedicated-toggle)

#+end_src

* Org
  #+begin_src emacs-lisp
    (setq org-ellipsis " ▼")
    (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
  #+end_src

* Packages
** Helm
  #+begin_src emacs-lisp
    (helm-mode 1)
    (global-set-key (kbd "C-x C-f") 'helm-find-files)
    (global-set-key (kbd "M-x") 'helm-M-x)
    (global-set-key (kbd "C-x C-b") 'helm-buffers-list)
    (global-set-key (kbd "C-s") 'helm-occur)
    (global-set-key (kbd "C-c d") 'ibuffer)
  #+end_src
** Modeline
  #+begin_src emacs-lisp
    (doom-modeline-mode 1)
    ;;(ac-config-default)
  #+end_src
** Multiple Cursors
  #+begin_src emacs-lisp
  (require 'multiple-cursors)
  (global-set-key (kbd "C->") 'mc/mark-next-like-this)
  (global-set-key (kbd "C-<") 'mc/mark-previous-like-this)
  (global-set-key (kbd "C-x <mouse-1>") 'mc/add-cursor-on-click)
  #+end_src
** Dashboard
  #+begin_src emacs-lisp
	(dashboard-setup-startup-hook)
	(setq dashboard-startup-banner 'official)
	(setq dashboard-center-content t)
	(setq dashboard-set-init-info nil)
	(setq dashboard-set-footer nil)
	(setq dashboard-banner-logo-title nil)  
	(setq dashboard-show-shortcuts nil)
	(setq dashboard-set-heading-icons t)
	(setq dashboard-set-file-icons t)
	(setq dashboard-items '((projects . 5) (bookmarks . 4) ))

	(setq dashboard-set-navigator t)    
    ;;  Format: "(icon title help action face prefix suffix)"
	(setq dashboard-navigator-buttons
	  `(;; line1

	    ((,(all-the-icons-octicon "rss" :height 1 :v-adjust 0.0)
	     "Rss"
	     "Elfeed Feed"
	     (lambda (&rest _) (elfeed)) ’warning "" "")

	    (,(all-the-icons-octicon "radio-tower" :height 1 :v-adjust 0.0)
	     "Music"
	     "Bongo Music Player"
	     (lambda (&rest _) (bongo-playlist)) ’warning "| " "")



	    )))

  #+end_src   
** Hydra
  #+begin_src emacs-lisp
      (defhydra hydra-windowing-options (:color red)
      "
	 Window Move         Window Resize 
	-------------------------------------
	_p_ : Move Up        _<up>_   : Shrink Window
	_n_ : Move Down      _<down>_ : Enlarge Window
	_b_ : Move Left      _<left>_ : Shrink Window Left
	_f_ : Move Right     _<right>_: Enlarge Window Right
      "
	("p" windmove-swap-states-up nil)
	("n" windmove-swap-states-down nil)
	("b" windmove-swap-states-left nil)
	("f" windmove-swap-states-right nil)

	("<up>" shrink-window nil)
	("<down>" enlarge-window nil)
	("<right>" shrink-window-horizontally nil)
	("<left>" enlarge-window-horizontally nil))
      (global-set-key(kbd "C-c m") 'hydra-windowing-options/body)

      (defhydra hydra-helpful-cmd (:color red)
      "
	 Helpful Commands
	--------------------------
	_l_ : Show Line Numbers
        _m_ : Bongo Music Player
      "
      ("l" display-line-numbers-mode nil)
      ("m" bongo-playlist nil)
    )
      (global-set-key (kbd "C-c h") 'hydra-helpful-cmd/body)

  #+end_src

** Elfeed
  #+begin_src emacs-lisp
    (setq elfeed-feeds  
	  '(
	    ;Feeds
	    ("https://hnrss.org/frontpage" HN)
	    ("https://hnrss.org/best" HN)
	    ("https://www.afp.gov.au/feed/media-releases" AFP)
	    ("https://www.justice.gov/feeds/opa/justice-news.xml" DOJ)
	    ("https://www.reddit.com/r/news/.rss")
	    ("https://www.unodc.org/unodc/feed/press-releases.xml" UNODC)
	    ("https://www.unodc.org/unodc/feed/publications.xml" UNODC)
	    ("https://www.unodc.org/unodc/feed/stories.xml" UNODC)



    ))  

    (setq-default elfeed-search-filter "@4-days-ago +unread")
    (setq-default elfeed-search-title-max-width 100)  
    (setq-default elfeed-search-title-min-width 100)  
    (elfeed-update)
  #+end_src

** Bongo
  #+begin_src emacs-lisp

  #+end_src
** Yasnippet
  #+begin_src emacs-lisp
    (yas-global-mode 1)
  #+end_src
*** TODO
    Add custom snippet
    
** LSP
#+begin_src emacs-lisp
  (add-hook 'c-mode-hook 'lsp)
  (add-hook 'c++-mode-hook 'lsp)

  ;; ;;(add-hook 'python-mode-hook 'lsp)

  (setq lsp-headerline-breadcrumb-enable nil)
  (setq lsp-enable-symbol-highlighting nil)
  (setq lsp-diagnostics-provider :none)

#+end_src
** From Source
  #+begin_src emacs-lisp
    (add-to-list 'load-path (concat user-emacs-directory "lisp/" ))
    (load "multi-term")  ;; Load My Terminal
  #+end_src
  

* Comments
** Required Package
  + Helm
  + multi-term
  + Multiple Cursor
  + Hydra
  + Org-bullets
  + Dashboard
  + projectile
  + Magit
  + Elfeed
  + Modeline
  + Centered Window
** Optional Package
  + LSP
  + company




