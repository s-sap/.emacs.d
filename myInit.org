#+TITLE: My Emacs Config
#+author: s-sap


* Theme & Font
Adds a Custom theme to emacs
#+begin_src emacs-lisp
(add-to-list 'custom-theme-load-path "~/.emacs.d/firebelly")
;;(add-to-list 'custom-theme-load-path "~/.emacs.d/atom-one-dark-theme")
;;(load-theme 'atom-one-dark t)
(load-theme 'firebelly t)
#+end_src

** Term
   Term change color
#+begin_src emacs-lisp
(custom-set-faces
 '(term-color-black ((t (:foreground "#3F3F3F" :background "#2B2B2B"))))
 '(term-color-red ((t (:foreground "#AC7373" :background "#8C5353"))))
 '(term-color-green ((t (:foreground "#7F9F7F" :background "#9FC59F"))))
 '(term-color-yellow ((t (:foreground "#DFAF8F" :background "#9FC59F"))))
 '(term-color-blue ((t (:foreground "#7CB8BB" :background "#4C7073"))))
 '(term-color-magenta ((t (:foreground "#DC8CC3" :background "#CC9393"))))
 '(term-color-cyan ((t (:foreground "#93E0E3" :background "#8CD0D3"))))
 '(term-color-white ((t (:foreground "#DCDCCC" :background "#656555"))))
 '(term-default-fg-color ((t (:inherit term-color-white))))
 '(term-default-bg-color ((t (:inherit term-color-black)))))
#+end_src

** Font
   Change the font

   #+begin_src emacs-lisp
    (set-frame-font "Monospace Bold 12" nil t)
   #+end_src


* Some Customization
#+begin_src emacs-lisp
;; Removing some default stuff
(menu-bar-mode -1)
(tool-bar-mode -1)
(scroll-bar-mode -1)
(setq org-src-fontify-natively t)
;; Show file size
(size-indication-mode)
;; Transparency Window
(set-frame-parameter (selected-frame) 'alpha '(75 . 65))
(add-to-list 'default-frame-alist '(alpha . (72 . 55)))

(setq browse-url-browser-function 'w3m-browse-url)
;; Centered mode
(centered-window-mode)
#+end_src
** Backup
	     Keep emacs temp backup files in it's own directory

	      #+begin_src emacs-lisp
	      (setq backup-directory-alist `(("." . "~/.emacs.d/.emacs_saves")))
	      #+end_src

** Register
	     #+begin_src emacs-lisp
	      (set-register ?p '(file . "~/Documents/Notes"))
	      (set-register ?a '(file . "~/.emacs.d")) 

	     #+end_src


* Personal Key Binding
#+begin_src emacs-lisp
(global-set-key (kbd "C-t") 'tab-new)
(global-set-key (kbd "C-x C-q") 'tab-close)
(global-set-key (kbd "C-x C-a") 'toggle-frame-fullscreen)
(global-set-key (kbd "C-c c") 'tab-switcher)
(global-set-key (kbd "C-c t") 'vterm-other-window)

(defun ash-term-hooks ()
  ;; dabbrev-expand in term
  (define-key term-raw-escape-map "/"
    (lambda ()
      (interactive)
      (let ((beg (point)))
        (dabbrev-expand nil)
        (kill-region beg (point)))
      (term-send-raw-string (substring-no-properties (current-kill 0)))))
  ;; yank in term (bound to C-c C-y)
  (define-key term-raw-escape-map "\C-y"
    (lambda ()
       (interactive)
       (term-send-raw-string (current-kill 0)))))
  (add-hook 'term-mode-hook 'ash-term-hooks)

#+end_src


* Packages
** Helm
  #+begin_src emacs-lisp
  (helm-mode 1)
  (global-set-key (kbd "C-x b") 'helm-buffers-list)
  (global-set-key (kbd "C-x C-f") 'helm-find-files)
  (global-set-key (kbd "M-x") 'helm-M-x)
  (global-set-key (kbd "C-s") 'helm-occur)
  #+end_src
** Modeline
  #+begin_src emacs-lisp
  (doom-modeline-mode 1)
  (ac-config-default)
  #+end_src
** Multiple Cursors
  #+begin_src emacs-lisp
  (require 'multiple-cursors)
  (global-set-key (kbd "C->") 'mc/mark-next-like-this)
  (global-set-key (kbd "C-<") 'mc/mark-previous-like-this)
  (global-set-key (kbd "C-x <mouse-1>") 'mc/add-cursor-on-click)
  #+end_src
** Dashboard
  #+begin_src emacs-lisp
    (dashboard-setup-startup-hook)
    (setq dashboard-startup-banner 'official)
    ;(setq dashboard-startup-banner "/home/ssap/.emacs.d/emacs_new.png")
    (setq dashboard-center-content t)
    ;(setq dashboard-set-init-info nil)
    (setq dashboard-set-footer nil)
    (setq dashboard-banner-logo-title nil)  
    (setq dashboard-items '((registers . 6) (recents  . 4) ))
  #+end_src   
** Org
  #+begin_src emacs-lisp
  (use-package org
	       :config
	       (setq org-ellipsis " â–¼"))
  (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
  #+end_src

** Elfeed
  #+begin_src emacs-lisp
  (setq elfeed-feeds' ("https://hnrss.org/frontpage"
                       "https://hnrss.org/best" 
		       "https://www.afp.gov.au/feed/media-releases" ) 
		       
  )

  #+end_src
** Hydra
  #+begin_src emacs-lisp
  (defhydra hydra-windowing-options (:color red)
  "
     Window Move         Window Resize 
    -------------------------------------
    _p_ : Move Up        _<up>_   : Shrink Window
    _n_ : Move Down      _<down>_ : Enlarge Window
    _b_ : Move Left      _<left>_ : Shrink Window Left
    _f_ : Move Right     _<right>_: Enlarge Window Right
  "
    ("p" windmove-swap-states-up nil)
    ("n" windmove-swap-states-down nil)
    ("b" windmove-swap-states-left nil)
    ("f" windmove-swap-states-right nil)

    ("<up>" shrink-window nil)
    ("<down>" enlarge-window nil)
    ("<right>" shrink-window-horizontally nil)
    ("<left>" enlarge-window-horizontally nil))
  (global-set-key(kbd "C-c m") 'hydra-windowing-options/body)
  
  (defhydra hydra-helpful-cmd (:color red)
  "
     Helpful Commands
    --------------------------
    _l_ : Show Line Numbers
    _c_ : Center Window
  "
  ("l" display-line-numbers-mode nil)
  ("c" centered-window-mode nil)
)
  (global-set-key (kbd "C-c h") 'hydra-helpful-cmd/body)
  
  #+end_src

** Yasnippet
  #+begin_src emacs-lisp
  (yas-global-mode 1)
  #+end_src
*** TODO
    Add custom snippet
